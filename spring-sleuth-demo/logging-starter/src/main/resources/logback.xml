<configuration>
    <springProperty scope="context" name="springAppName" source="spring.application.name"/>
    <springProfile name="production">
        <!-- configuration to be enabled when the "production" profile is  active -->

        <!-- Configure the Console appender -->
        <appender name="Console" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>
                    [${PID}] %d{yyyy-MM-dd HH:mm:ss.SSS} - [${springAppName:-app},%X{traceId:-0},%X{spanId:-0},%X{exportable:-false}] - %-5level [%thread] %logger.%M(%line) - %msg%n
                </pattern>
            </encoder>
        </appender>
    </springProfile>

    <springProfile name="!production">
        <!-- configuration to be enabled when the "production" profile is not active -->

        <!-- Configure the Console appender -->
        <appender name="Console" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>
                    %boldMagenta([${PID}]) %d{yyyy-MM-dd HH:mm:ss.SSS} - %boldCyan([${springAppName:-app},%X{traceId:-0},%X{spanId:-0},%X{exportable:-false}]) - %highlight(%-5level) %magenta([%thread]) %boldGreen(%logger.%M) - %msg%n
                </pattern>
            </encoder>
        </appender>
    </springProfile>
    <!--输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)-->
    <!-- Configure the Sentry appender, overriding the logging threshold to the WARN level -->
    <appender name="Sentry" class="io.sentry.logback.SentryAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>warn</level>
        </filter>
    </appender>

    <!-- Enable the Console and Sentry appenders, Console is provided as an example  of a non-Sentry logger that is set to a different logging threshold -->
    <root level="INFO">
        <appender-ref ref="Console"/>
        <appender-ref ref="Sentry"/>
    </root>
</configuration>